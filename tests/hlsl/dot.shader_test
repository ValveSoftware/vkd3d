[pixel shader]
uniform float4 x;
uniform float4 y;

float4 main() : SV_TARGET
{
    return dot(x, y);
}

[test]
uniform 0 float4 2.0 3.0 4.0 5.0
uniform 4 float4 10.0 11.0 12.0 13.0
todo(glsl) draw quad
probe (0, 0) rgba (166.0, 166.0, 166.0, 166.0)

[pixel shader]
uniform float2 x;
uniform float4 y;

float4 main() : SV_TARGET
{
    return dot(x, y);
}

[test]
uniform 0 float4 2.0 3.0 0.0 0.0
uniform 4 float4 10.0 11.0 12.0 13.0
todo(sm<4 | glsl) draw quad
probe (0, 0) rgba (53.0, 53.0, 53.0, 53.0)

[pixel shader]
uniform float x;
uniform float4 y;

float4 main() : SV_TARGET
{
    return dot(x, y);
}

[test]
uniform 0 float4 2.0 0.0 0.0 0.0
uniform 4 float4 10.0 11.0 12.0 13.0
todo(glsl) draw quad
probe (0, 0) rgba (92.0, 92.0, 92.0, 92.0)

[pixel shader]
uniform float4 x;
uniform float y;

float4 main() : SV_TARGET
{
    return dot(x, y);
}

[test]
uniform 0 float4 10.0 11.0 12.0 13.0
uniform 4 float4 2.0 0.0 0.0 0.0
todo(glsl) draw quad
probe (0, 0) rgba (92.0, 92.0, 92.0, 92.0)

[pixel shader]
uniform float x;
uniform float y;

float4 main() : SV_TARGET
{
    return dot(x, y);
}

[test]
% Account for both the SM1 and SM4 uniform layout
uniform 0 float4 2.0 3.0 0.0 0.0
uniform 4 float4 3.0 0.0 0.0 0.0
todo(glsl) draw quad
probe (0, 0) rgba (6.0, 6.0, 6.0, 6.0)

[pixel shader]
static const float4 x = float4(2.0, 3.0, 4.0, 5.0);
static const float4 y = float4(6.0, 7.0, 8.0, 9.0);

float4 main() : sv_target
{
    return dot(x, y);
}

[test]
todo(glsl) draw quad
probe (0, 0) rgba (110.0, 110.0, 110.0, 110.0)

[pixel shader fail]
uniform float1x1 x;
uniform float4 y;

float4 main() : SV_TARGET
{
    return dot(x, y);
}

[pixel shader fail]
uniform float1x4 x;
uniform float4 y;

float4 main() : SV_TARGET
{
    return dot(x, y);
}

[pixel shader fail]
uniform float4x1 x;
uniform float4 y;

float4 main() : SV_TARGET
{
    return dot(x, y);
}

[pixel shader fail]
uniform float4x4 x;
uniform float4 y;

float4 main() : SV_TARGET
{
    return dot(x, y);
}
