[require]
shader model >= 4.0

[pixel shader]

float4 main(uniform float f, uniform int i, uniform bool b, uniform half h) : sv_target
{
    float4 ret;

    ret.x = ((float)(uint)f) - 1.5;
    ret.y = ((float)(uint)i) - 1.5;
    ret.z = ((float)(uint)b) / 2;
    ret.w = ((float)(uint)h) + 0.5;
    return ret;
}

[test]
uniform 0 float 2.6
uniform 1 int 2
uniform 2 int -2
uniform 3 float -3.6
todo draw quad
probe all rgba (0.5, 0.5, 0.5, 0.5)


[pixel shader]

float4 main() : sv_target
{
    float f = 2.6;
    int i = 2;
    bool b = true;
    half h = -3.6;
    float4 ret;

    ret.x = ((float)(uint)f) - 1.5;
    ret.y = ((float)(uint)i) - 1.5;
    ret.z = ((float)(uint)b) / 2;
    ret.w = ((float)(uint)h) + 0.5;
    return ret;
}

[test]
draw quad
todo probe all rgba (0.5, 0.5, 0.5, 0.5)


% Large values are clamped.

[pixel shader]

float4 main(uniform float2 u) : sv_target
{
    float2 f = float2(-2.0, 5000000000.0);

    return float4((float2)(uint2)u, (float2)(uint2)f);
}

[test]
uniform 0 float4 -2.0 5000000000.0 0 0
draw quad
todo probe all rgba (0.0, 4294967296.0, 0.0, 4294967296.0)


% Infinity is also clamped.

[pixel shader]

float4 main(uniform float2 u) : sv_target
{
    float2 f = float2(1.0 / 0, -1.0 / 0);

    return float4((float2)(uint2)u, (float2)(uint2)f);
}

[test]
uniform 0 float4 INF -INF 0 0
draw quad
todo probe all rgba (4294967296.0, 0.0, 4294967296.0, 0.0)


% NaN is converted to zero.

[pixel shader]

float4 main(uniform float2 u) : sv_target
{
    float nan = 0 * (1.0 / 0);
    float2 f = float2(nan, -nan);

    return float4((float2)(uint2)u, (float2)(uint2)f);
}

[test]
uniform 0 float4 NaN -NaN 0 0
draw quad
probe all rgba (0.0, 0.0, 0.0, 0.0)
